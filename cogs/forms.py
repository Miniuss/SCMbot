import discord
from discord.ext import commands
from utils import sqlmgr

from configparser import ConfigParser
from os.path import join as path_join
from os.path import exists as path_exists

from json import load as json_load
from json import dump as json_dump

from time import time as timenow



CONFIG = ConfigParser()
CONFIG.read("config.cfg")

ADMIN_ROLES = list(map(int, CONFIG["Perms"]["admin_roles"].replace(" ", "").split(",")))
NO_FORM_ROLES = list(map(int, CONFIG["Perms"]["no_form_roles"].replace(" ", "").split(",")))

MSG_CHANNEL = int(CONFIG["Form"]["msg_channel"])
SUBMIT_CHANNEL = int(CONFIG["Form"]["submit_channel"])

DATABASE = sqlmgr.DatabaseManager("data/form_data.db")



class FormModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(
            title="–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ Steam Content Makers",
            custom_id="form_modal",
            timeout=None
        )

        self.elements = {
            "steam_profile_url": discord.ui.InputText(
                style=discord.InputTextStyle.short,
                custom_id="steam_profile_url",
                label="–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å Steam",
                placeholder="https://steamcommunity.com/id/...",
                min_length=31,
                max_length=100,
                required=True
            ),
            "steam_content_url": discord.ui.InputText(
                style=discord.InputTextStyle.long,
                custom_id="steam_content_url",
                label="–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ Steam",
                placeholder="https://steamcommunity.com/sharedfiles/filedetails/?id=...",
                min_length=56,
                max_length=800,
                required=True
            ),
            "claimed_roles": discord.ui.InputText(
                style=discord.InputTextStyle.long,
                custom_id="claimed_roles",
                label="–†–æ–ª–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–µ—Ç–µ–Ω–¥—É–µ—Ç–µ",
                placeholder="–ü–∏—Å–∞—Ç–µ–ª—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤\n–ò–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä\n–ú–æ–¥–æ–¥–µ–ª –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ...",
                min_length=1,
                max_length=200,
                required=True
            )
        }

        for e in self.elements.values():
            self.add_item(e)

    async def callback(self, inter: discord.Interaction):
        await inter.response.defer(ephemeral=True)

        uploader = inter.user
        profile_url = self.elements["steam_profile_url"].value
        content_url = self.elements["steam_content_url"].value
        claimed_roles = self.elements["claimed_roles"].value

        DATABASE.write_form_data(
            uid=uploader.id,
            upload_time=round(timenow()),
            steam_profile_url=profile_url,
            steam_content_url=content_url,
            claimed_roles=claimed_roles
        )

        form_id = DATABASE.exctract_record_data(uid=uploader.id)["id"]
        channel = inter.guild.get_channel(SUBMIT_CHANNEL)

        embed = discord.Embed(
            title=f"–ó–∞—è–≤–∫–∞ {uploader.display_name}",
            color=discord.Color(int("FFFFFF", 16)),
            url=uploader.jump_url
        )

        embed.add_field(
            name="–û–± —É—á–∞—Å—Ç–Ω–∏–∫–µ",
            value=f"–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: <t:{round(uploader.joined_at.timestamp())}:f>\n"
                  f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞: <t:{round(uploader.created_at.timestamp())}:f>\n"
                  f"–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {uploader.mention}\n"
                  f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {uploader.id}",
            inline=False
        )
        embed.add_field(
            name="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å Steam",
            value=profile_url,
            inline=False
        )
        embed.add_field(
            name="–°—Å—ã–ª–∫–∏ –Ω–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ Steam",
            value=content_url,
            inline=False
        )
        embed.add_field(
            name="–ü—Ä–µ—Ç–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏",
            value=claimed_roles,
            inline=False
        )

        embed.set_thumbnail(url=uploader.avatar.url)
        embed.set_footer(
            text=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ä–º—ã: #{form_id}"
        )

        await channel.send(embed=embed, view=FormModSubmitView(uploader.id))

        response_embed = discord.Embed(
            title="–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
            description="–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ "
                        "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.\n"
                        "–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!",
            color=discord.Color.green()
        )
        response_embed.set_footer(text=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ä–º—ã: #{form_id}")

        await inter.respond(embed=response_embed, ephemeral=True)

class FormUploadView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(
        custom_id="form_upload_button",
        label="–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞—è–≤–∫—É",
        emoji="üìù",
        style=discord.ButtonStyle.green
    )
    async def form_upload_button(self, button: discord.ui.Button, inter: discord.Interaction):
        data = DATABASE.exctract_record_data(uid=inter.user.id)
        uploader_roles = inter.user.roles

        if data is not None:
            embed = discord.Embed(
                title="–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Ñ–æ—Ä–º—É!",
                description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –≤ –¥–∞–Ω–Ω–æ–º " 
                            "—Å–µ—Ä–≤–µ—Ä–µ. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É –º–æ–∂–Ω–æ –ª–∏—à—å 1 —Ä–∞–∑ –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞.\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∏ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π.\n\n"
                            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã.",
                color=discord.Color.red()
            )
            embed.set_footer(text=f"–í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ä–º—ã: #{data["id"]}")

            await inter.respond(embed=embed, ephemeral=True)
            return
        
        if any(role.id in NO_FORM_ROLES for role in uploader_roles):
            embed = discord.Embed(
                title="–í–∞–º –Ω–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫—É",
                description="–£ –≤–∞—Å —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–æ–ª—å/—Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã",
                color=discord.Color.orange()
            )

            await inter.respond(embed=embed, ephemeral=True)
            return
        
        await inter.response.send_modal(FormModal())

class FormModSubmitView(discord.ui.View):
    def __init__(self, uid: int):
        super().__init__(timeout=None)
        self.uid = uid

    @discord.ui.button(
        custom_id="form_approve_button",
        label="–ü—Ä–∏–Ω—è—Ç—å —Ñ–æ—Ä–º—É",
        emoji="‚úîÔ∏è",
        style=discord.ButtonStyle.green
    )
    async def approve(self, button: discord.ui.Button, inter: discord.Interaction):
        uploader = inter.guild.get_member(self.uid)
        approver = inter.user

        if not any(role.id in ADMIN_ROLES for role in approver.roles):
            response_embed = discord.Embed(
                title="–ù–µ—Ç—É –ø—Ä–∞–≤",
                description="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è",
                color=discord.Color.dark_red()
            )

            await inter.respond(embed=response_embed, ephemeral=True)
            return

        if uploader is None:
            DATABASE.remove_record(uid=self.uid)

            response_embed = discord.Embed(
                title="–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
                description="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n"
                            "–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ–º—É –ø—Ä–µ–Ω–∞–¥–ª–µ–∂–∏—Ç –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ "
                            "–≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞. –§–æ—Ä–º–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏ –±—É–¥–µ—Ç "
                            "—É–¥–∞–ª–µ–Ω–∞ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É –µ—ë "
                            "–ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –≤ —Ü–µ–ª—è—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.",
                color=discord.Color.red()
            )

            await inter.respond(response_embed)
            self.disable_all_items()

            return
        
        await inter.response.defer()

        DATABASE.role_approval(approver.id, uid=self.uid)

        user_embed = discord.Embed(
            title=f"–í–∞—à–∞ —Ñ–æ—Ä–º–∞ –≤ {inter.guild.name} –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞!",
            description=f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä **{approver.global_name}** –ø—Ä–∏–Ω—è–ª –≤–∞—à—É —Ñ–æ—Ä–º—É!\n"
                        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏",
            color=discord.Color.green()
        )
        user_embed.set_footer(text=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—è: {approver.id}")

        dm_channel = await uploader.create_dm()
        await dm_channel.send(embed=user_embed)

        response_embed = discord.Embed(
            title=f"{approver.global_name} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —ç—Ç—É —Ñ–æ—Ä–º—É",
            description=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—è: {approver.id}",
            color=discord.Color.dark_green()
        )

        self.disable_all_items()

        await inter.message.edit(view=self)
        await inter.respond(embed=response_embed)

    @discord.ui.button(
        custom_id="form_disapprove_button",
        label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É",
        emoji="‚úñÔ∏è",
        style=discord.ButtonStyle.red
    )
    async def reject(self, button: discord.ui.Button, inter: discord.Interaction):
        uploader = inter.guild.get_member(self.uid)
        approver = inter.user

        if not any(role.id in ADMIN_ROLES for role in approver.roles):
            response_embed = discord.Embed(
                title="–ù–µ—Ç—É –ø—Ä–∞–≤",
                description="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è",
                color=discord.Color.dark_red()
            )

            await inter.respond(embed=response_embed, ephemeral=True)
            return

        if uploader is None:
            DATABASE.remove_record(uid=self.uid)

            response_embed = discord.Embed(
                title="–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
                description="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n"
                            "–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ–º—É –ø—Ä–µ–Ω–∞–¥–ª–µ–∂–∏—Ç –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ "
                            "–≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞. –§–æ—Ä–º–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏ –±—É–¥–µ—Ç "
                            "—É–¥–∞–ª–µ–Ω–∞ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É –µ—ë "
                            "–ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –≤ —Ü–µ–ª—è—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.",
                color=discord.Color.red()
            )

            await inter.respond(response_embed)
            self.disable_all_items()

            return
        
        await inter.response.defer()

        DATABASE.role_approval(approver.id, uid=self.uid)

        user_embed = discord.Embed(
            title=f"–í–∞—à–∞ —Ñ–æ—Ä–º–∞ –≤ {inter.guild.name} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!",
            description=f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä **{approver.global_name}** –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à—É —Ñ–æ—Ä–º—É!",
            color=discord.Color.red()
        )
        user_embed.set_footer(text=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ–ª—è: {approver.id}")

        dm_channel = await uploader.create_dm()
        await dm_channel.send(embed=user_embed)

        response_embed = discord.Embed(
            title=f"{approver.global_name} –æ—Ç–∫–ª–æ–Ω–∏–ª —ç—Ç—É —Ñ–æ—Ä–º—É",
            description=f"–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ–ª—è: {approver.id}",
            color=discord.Color.dark_red()
        )

        self.disable_all_items()

        await inter.message.edit(view=self)
        await inter.respond(embed=response_embed)



class FormsCog(commands.Cog):
    def __init__(self, bot: discord.Bot):
        self.bot = bot


    GROUP = discord.SlashCommandGroup(
        name="form",
        name_localizations={
            "ru": "—Ñ–æ—Ä–º–∞"
        }
    )


    @GROUP.command(
        name="update",
        description="Updates form message with new one",
        name_localizations={
            "ru": "–æ–±–Ω–æ–≤–∏—Ç—å"
        },
        description_localizations={
            "ru": "–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–æ–π –Ω–∞ –Ω–æ–≤–æ–µ"
        }
    )
    @commands.has_any_role(*ADMIN_ROLES)
    @commands.cooldown(1, 120, commands.BucketType.guild)
    async def update(self, ctx: discord.ApplicationContext):
        await ctx.defer(ephemeral=True)

        lastmsg_path = path_join("data", "formmsg.txt")
        form_path = path_join("data", "form.json")

        if not path_exists(form_path): # Abort if form.json doesn't exist
            response_embed = discord.Embed(
                title="–§–∞–π–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω",
                description="–§–∞–π–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–¥–∞–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π `/form set`",
                color=discord.Color.red()
            )
            await ctx.respond(embed=response_embed, ephemeral=True)

            return
        
        channel = self.bot.get_channel(MSG_CHANNEL)
        
        if path_exists(lastmsg_path):
            with open(lastmsg_path, "r") as f:
                msg_id = int(f.read().replace(" ", "").replace("\n", ""))

                try:
                    message_to_delete = await channel.fetch_message(msg_id)
                except Exception:
                    pass
                else:
                    await message_to_delete.delete()

        embeds = []

        with open(form_path, "r", encoding="UTF-8") as f:
            embeds_list = json_load(f)
            embeds = [discord.Embed.from_dict(e) for e in embeds_list]

        message = await channel.send(embeds=embeds, view=FormUploadView())

        with open(lastmsg_path, "w") as f:
            f.write(str(message.id))

        response_embed = discord.Embed(
            title="–°–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–æ",
            description=f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–æ–π –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–∞–Ω–Ω—ã–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ "
                        f"–≤–∞–º–∏.\n–í—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ [—Ç—É—Ç]({message.jump_url})",
            color=discord.Color.green()
        )

        await ctx.respond(embed=response_embed, ephemeral=True)


    @GROUP.command(
        name="set",
        description="Changes form message",
        name_localizations={
            "ru": "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        },
        description_localizations={
            "ru": "–ú–µ–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–æ–π"
        },
        options=(
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=256,
                required=True,
                name="title",
                description="Title of the message",
                name_localizations={
                    "ru": "–∑–∞–≥–æ–ª–æ–≤–æ–∫"
                },
                description_localizations={
                    "ru": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è"
                }
            ),
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=4096,
                required=True,
                name="text",
                description="Text inside of the embed [NOTE: New line = \\n]",
                name_localizations={
                    "ru": "—Ç–µ–∫—Å—Ç"
                },
                description_localizations={
                    "ru": "–¢–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –≤–ª–æ–∂–µ–Ω–∏—è [–ó–ê–ú–ï–¢–ö–ê: –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ = \\n]"
                }
            ),
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=6,
                max_length=6,
                required=False,
                default="FFFFFF",
                name="color",
                description="HEX representation of embed's color (ex. \"FFFFFF\")",
                name_localizations={
                    "ru": "—Ü–≤–µ—Ç"
                },
                description_localizations={
                    "ru": "–¶–≤–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –≤ –≤–∏–¥–µ HEX (–ø—Ä. \"FFFFFF\")"
                }
            ),
            discord.Option(
                discord.SlashCommandOptionType.attachment,
                required=False,
                default=None,
                name="image",
                description="Image that will be attached to the embed",
                name_localizations={
                    "ru": "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                },
                description_localizations={
                    "ru": "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∫—Ä–µ–ø–∏—Ç—Å—è –∫ –≤–ª–æ–∂–µ–Ω–∏—é"
                }
            )
        )
    )
    @commands.has_any_role(*ADMIN_ROLES)
    @commands.cooldown(2, 300)
    async def fset(self, ctx: discord.ApplicationContext, title: str, text: str, color: str = "FFFFFF", image: discord.Attachment = None):
        await ctx.defer(ephemeral=True)
        
        embeds = []

        if image is not None:
            e = discord.Embed(
                color=int(str(color), 16)
            )
            e.set_image(url=image.url)

            embeds.append(e.to_dict())

        e = discord.Embed(
            title=title,
            description=text.replace("\\n", "\n"),
            color=int(str(color), 16)
        )

        embeds.append(e.to_dict())


        form_path = path_join("data", "form.json")

        with open(form_path, "w") as f:
            json_dump(embeds, f, indent=4)

        response_embed = discord.Embed(
            title="–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
            description="–í–∞—à–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–æ–π –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n"
                        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "
                        "`/form update`",
            color=discord.Color.green()
        )

        await ctx.respond(embed=response_embed, ephemeral=True)


    @GROUP.command(
        name="view",
        description="Find and view form info",
        name_localizations={
            "ru": "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
        },
        description_localizations={
            "ru": "–ù–∞—Ö–æ–¥–∏—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–µ"
        },
        options=(
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=40,
                required=False,
                default=-1,
                name="form_id",
                description="Integer ID of the form",
                name_localizations={
                    "ru": "–∏–¥_—Ñ–æ—Ä–º—ã"
                },
                description_localizations={
                    "ru": "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ä–º—ã"
                }
            ),
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=40,
                required=False,
                default=-1,
                name="user_id",
                description="Integer ID of the user",
                name_localizations={
                    "ru": "–∏–¥_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                },
                description_localizations={
                    "ru": "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                }
            )
        )
    )
    @commands.has_any_role(*ADMIN_ROLES)
    async def fview(self, ctx: discord.ApplicationContext, form_id: str = -1, user_id: str = -1):
        if form_id == -1 and user_id == -1:
            embed = discord.Embed(
                title="–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
                description="–•–æ—Ç—è-–±—ã –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–≤–µ–Ω —á–µ–º—É-—Ç–æ",
                color=discord.Color.orange()
            )

            await ctx.respond(embed=embed, ephemeral=True)
            return

        try:
            form_id = int(form_id)
            user_id = int(user_id)
        except ValueError:
            embed = discord.Embed(
                title="–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ò–î —Ñ–æ—Ä–º—ã/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description="–ò–î –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!",
                color=discord.Color.dark_red()
            )

            await ctx.respond(embed=embed, ephemeral=True)
            return
        
        data = DATABASE.exctract_record_data(form_id=form_id, uid=user_id)

        if data is None:
            embed = discord.Embed(
                title="–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç",
                color=discord.Color.orange()
            )

            await ctx.respond(embed=embed, ephemeral=True)
            return
        
        id = data["id"]
        upload_time = data["upload_time"]
        steam_profile_url = data["steam_profile_url"]
        steam_content_url = data["steam_content_url"]
        claimed_roles = data["claimed_roles"]
        
        uploader = data["uid"]
        approver = data["approver_uid"] or "–ù–µ—Ç—É"


        embed = discord.Embed(
            title=f"–§–æ—Ä–º–∞ #{id}",
            description=f"–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏: <t:{upload_time}:f>\n"
                        f"–ò–î –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {uploader}\n"
                        f"–ò–î –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—è/–æ—Ç–∫–ª–æ–Ω–∏—Ç–µ–ª—è: {approver}",
            color=discord.Color(int("FFFFFF", 16))
        )
        embed.add_field(
            name="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å Steam",
            value=steam_profile_url,
            inline=False
        )
        embed.add_field(
            name="–°—Å—ã–ª–∫–∏ –Ω–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ Steam",
            value=steam_content_url,
            inline=False
        )
        embed.add_field(
            name="–ü—Ä–µ—Ç–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏",
            value=claimed_roles,
            inline=False
        )

        await ctx.respond(embed=embed, ephemeral=True)


    @GROUP.command(
        name="delete",
        description="Deletes form data forever",
        name_localizations={
            "ru": "—É–¥–∞–ª–∏—Ç—å"
        },
        description_localizations={
            "ru": "–£–¥–∞–ª—è–µ—Ç –Ω–∞–≤—Å–µ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã"
        },
        options=(
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=40,
                required=False,
                default=-1,
                name="form_id",
                description="Integer ID of the form",
                name_localizations={
                    "ru": "–∏–¥_—Ñ–æ—Ä–º—ã"
                },
                description_localizations={
                    "ru": "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ä–º—ã"
                }
            ),
            discord.Option(
                discord.SlashCommandOptionType.string,
                min_length=1,
                max_length=40,
                required=False,
                default=-1,
                name="user_id",
                description="Integer ID of the user",
                name_localizations={
                    "ru": "–∏–¥_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                },
                description_localizations={
                    "ru": "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                }
            )
        )
    )
    @commands.has_any_role(*ADMIN_ROLES)
    @commands.cooldown(1, 15, commands.BucketType.guild)
    async def fdelete(self, ctx: discord.ApplicationContext, form_id: str = -1, user_id: str = -1):
        if form_id == -1 and user_id == -1:
            embed = discord.Embed(
                title="–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
                description="–•–æ—Ç—è-–±—ã –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–≤–µ–Ω —á–µ–º—É-—Ç–æ",
                color=discord.Color.orange()
            )

            await ctx.respond(embed=embed, ephemeral=True)
            return

        try:
            form_id = int(form_id)
            user_id = int(user_id)
        except ValueError:
            embed = discord.Embed(
                title="–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ò–î —Ñ–æ—Ä–º—ã/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                description="–ò–î –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!",
                color=discord.Color.dark_red()
            )

            await ctx.respond(embed=embed, ephemeral=True)
            return
        
        DATABASE.remove_record(form_id=form_id, uid=user_id)

        embed = discord.Embed(
            title="–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã",
            color=discord.Color.red()
        )

        await ctx.respond(embed=embed, ephemeral=True)



def setup(bot: discord.Bot):
    bot.add_cog(FormsCog(bot))
